=About=
'''Chiori Web Server''' is a Resin Embedded Wrapper Server utilizing a Plugin system based on CraftBukkit.
The web server also implements a Java port of Chiori Framework (PHP), which utilized component based structure.
The idea was to give you the power to create amazing websites with less time and resources without reinventing the wheel.

=Included Framework=
The development of Chiori Framework in the PHP form will be discontinued but it's evolution will continue from with
this Java Web Server. Porting the framework to Java ment faster load times and less server lag.

=To Do=
* Finish porting the framework
* Introduce an Administration Panel for the Framework.
* Create a Sandbox Mode.

=Version History=
For the reasons of preservation, I will keep the version history for the PHP Framework here
but any version 5.2 and up will be the Java Port
==Version 1.0==
Original Framework concept first using object oriented programming.
Each page would call framework in the beginning and end of each file
which was later determined to be resource intensive and more work then desired.
==Version 2.0==
First version introducing a loader that would be started using mod_rewrite.
This version also introduced built-in WebDav support, Feature later removed
due to the issue of maintaining the buggy code.
==Version 3==
===Subversion 1===
First introduction of experimental administration panel.
Panel removed in later versions but there are plans to introduce it.
===Subversion 2===
Limited Version, Used as an experimental version to Version 4.0.
==Version 4==
===Subversion 1 (Betarain)===
====Build 0101====
Fourth time completely rewriting source code from scratch.
Version 3 or prior modules not supported in this version.
====Build 0309====
Nothing more then bug fixes.
===Subversion 2 (Betadroid)===
====Build 0319====
First introduction release of component based system.
Changed some function names to be more compliment with personal coding standards.
Rewrote the Database Component to use the new PDO instead of the previous mysql commands.
This change allows multiple db connections, file based db using SQLite and other db types like oracle.
Also added a second level of containers called "Views" which allow for even less theme code.
====Build 0326====
Many more bug fixes. Finished porting 98% of the user module code to a component.
====Build 0606====
Finished porting 99% of all outdated modules and code. Fixed many more bugs.
===Subversion 3 (Sentry)===
====Build 0712====
First build safe for lite production use. Also improved local file loader,
Framework will load the index file of a requested folder if it exists.
Some core framework panel code was added to possibly introduce the
framework panel again but later decided to scrap the idea and wait till later release.
===Subversion 4 (Rainbow Dash)===
====Build 0901====
First version to appear on the GitHub. Made some bug fixes.
==Version 5==
===Subversion 0 (Fluttershy)===
====Build 1106====
Again more code rewrites to make the framework more streamlined and easier to debug.
====Build 1111====
Inported some old code which broke the framework. Fixed in next push.
====Build 1115/1116====
Bug Fixes.
===Subversion 1 (Scootaloo)===
====Build 0106/0107====
Introduced Hooks which are like event listeners. Bug Fixes.
===Subversion 2 (Lunar Dream)===
====Build 0825====
First attempts to framework to Chiori Web Server.

=Installation=
==Configuration==
By default the server configuration will be located in the file "chiori.yml" in the root folder of the running jar. This file will generate on first use.
About the config coming soon!

==File Placement==
On first use all you need is the jar release file "chiori_server.jar" in a folder that writable by the user that will run the program. All required folders and files will be created on first use.

== Database Configuration ==
At the moment, Regardless if your website will be using a database under this framework or not,
The framework will still need a database to keep track of curtain configuration.
We plan to get the SQLite (Flat File) support working very soon which will replace this requirement.

Create a database using the sql file (frameworkdb.sql) included in the repository or release then set the credentials within the "chiori.yml" config file.

=Plugins=
Because this web server has a Plugin System based on Bukkit (A Minecraft Game Server) you can develop Plugins the same way they are done for Bukkit.
The biggest differences is the API has different class nodes (which if you are using an IDE like Eclipse will resolve automaticly) and Not all the same events exist (ie. How do you implement a BlockBreakEvent in a web server?).
You can find a nice beginners tutorial at https://forums.bukkit.org/threads/basic-bukkit-plugin-tutorial.1339/. At the moment the Web Server Plugin system is based on CraftBukkit implmenting Minecraft 1.6 API. There are currently no plans to closely follow the changes that Bukkit will make to there Plugin API but this might change.

Have a plugin you made with our Plugin API that you would like us to help distribute?
We are more then happy to take a look just keep these rules in mind?
* Please respect the original purpose of our framework and not change any of this (There might be exceptions here depending on what your changes are.).
* Be respectful of any of us that you have communication with.
* It's encouraged to distribute your Plugin as open source.

=License=
Chiori Web Server is licensed under the Mozila Public License Version 2.0.
If you decide to use our framework or use any of our code (In part or whole), PLEASE, we would love to hear about it, It's not required but it's generally cool to hear what others do with our stuff.

Any products using the Chiori prefix is considered copyright of Chiori Greene and Greenetree LLC (D.B.A Apple Bloom Company)
(C) 2013 Apple Bloom Company, Greenetree LLC, ChioriFramework, Chiori Web Server. 
